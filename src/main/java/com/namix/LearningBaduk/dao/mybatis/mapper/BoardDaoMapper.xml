<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.namix.LearningBaduk.dao.BoardDao">

	<select id="getBoards" resultType="com.namix.LearningBaduk.entity.BoardView">
		select boardId, boardTitle, boardContent, date_format(boardDate, '%Y-%m-%d') as boardDate, boardCategory, boardReport, userId, boardHit, commentCount, likeCount, dislikeCount, userNickname from boardview where boardCategory = #{category} and ${field} like '%${query}%' order by boardId desc limit #{offset}, #{size}
	</select>

	<select id="getPageCount" resultType="int">
		select count(*) from boardview where boardCategory = #{category} and ${field} like '%${query}%'
	</select>
	
	<insert id="writeDetail">
		insert into board(boardTitle, boardContent, boardCategory, userId) values(#{title}, #{content}, #{category}, #{userId})
	</insert>

	<select id="getDetailBoard" resultType="com.namix.LearningBaduk.entity.BoardView">
		select boardId, boardTitle, boardContent, date_format(boardDate, '%Y-%m-%d') as boardDate, boardCategory, boardReport, userId, boardHit, commentCount, likeCount, dislikeCount, userNickname from boardview where boardId = #{id}
	</select>
	
	<update id="updateDetail">
		update board set boardTitle = #{title}, boardContent = #{content} where boardId = #{id}
	</update>
	
	<delete id="deleteDetail">
		delete from board where boardId = #{id}
	</delete>
	
	<select id="getComments" resultType="com.namix.LearningBaduk.entity.Comment">
		select commentId, commentContent, date_format(commentDate, '%Y-%m-%d') as commentDate, userId, boardId from comment where boardId = #{id} order by commentId desc limit #{offset}, #{size}
	</select>
	
	<select id="getCommentCount" resultType="int">
		select count(*) from comment where boardId = #{id}
	</select>
	
	<select id="getUsersLastBoardId" resultType="int">
		select boardId from board where userId = #{userId} order by boardId desc limit 1;
	</select>
	
	<update id="addHit">
		update board set boardHit = boardHit + 1 where boardId = #{id}
	</update>
	
	<select id="getBoardsUser" resultType="String">
		select userId from board where boardId = #{id}
	</select>
	
	<select id="likeClicked" resultType="int">
		select count(*) from likes where boardId = #{id} and userId = #{userId}
	</select>
	
	<select id="dislikeClicked" resultType="int">
		select count(*) from dislikes where boardId = #{id} and userId = #{userId}
	</select>
	
	<insert id="addLike">
		insert into likes(boardId, userId) values(#{id}, #{userId})	
	</insert>
	
	<insert id="addDislike">
		insert into dislikes(boardId, userId) values(#{id}, #{userId})	
	</insert>
	
	<select id="getLikeCount" resultType="int">
		select count(*) from likes where boardId = #{id}
	</select>
	
	<select id="getDislikeCount" resultType="int">
		select count(*) from dislikes where boardId = #{id}
	</select>

	<insert id="postComment">
		insert into comment(commentContent, userId, boardId) values(#{commentContent}, #{userId}, #{id})
	</insert>

	<delete id="deleteComment">
		delete from comment where commentId = #{cid}
	</delete>
	
	<select id="getDetailsRowNumber" resultType="int">
		select sb.rn from (select b.*, row_number() over(order by boardId desc) as rn from board as b) as sb where boardId = #{id};
	</select>

</mapper>